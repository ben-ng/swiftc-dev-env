{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"noti",
				"notification"
			],
			[
				"not",
				"notification"
			],
			[
				"no",
				"notifications"
			],
			[
				"une",
				"unexpectedExitHandler"
			],
			[
				"webh",
				"webhookServer"
			],
			[
				"web",
				"webhookServer"
			],
			[
				"con",
				"configPattern"
			],
			[
				"last",
				"lastWebhookNotificationEpoch"
			],
			[
				"tri",
				"triggerName"
			],
			[
				"tr",
				"triggerName"
			],
			[
				"st",
				"statusCode"
			],
			[
				"zom",
				"zombies"
			],
			[
				"pro",
				"process"
			],
			[
				"spawn",
				"spawnWithEnv"
			],
			[
				"co",
				"contentType"
			],
			[
				"event",
				"eventName"
			],
			[
				"Append",
				"AppendContentsOf"
			],
			[
				"Pro",
				"PropagationSelection"
			],
			[
				"hasS",
				"hasSemanticsAttrs"
			],
			[
				"Only",
				"OnlyNestedSemantics"
			],
			[
				"mi",
				"microbench_once"
			],
			[
				"ben",
				"benchmark"
			],
			[
				"bin",
				"binomialProbability"
			],
			[
				"cum",
				"cumulative"
			],
			[
				"cumu",
				"cumulativeBinomialProbability"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ben/Documents/code/swiftc-dev-env"
	],
	"file_history":
	[
		"/Users/ben/Documents/code/dead-persons-switch/index.js",
		"/Users/ben/Documents/code/dead-persons-switch/README.md",
		"/Users/ben/Documents/code/dead-persons-switch/app.json",
		"/Users/ben/Documents/code/dead-persons-switch/test.js",
		"/Users/ben/Documents/code/dead-persons-switch/package.json",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/test.js",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/POSTJSON.js",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/package.json",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/index.js",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/README.md",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/LICENSE",
		"/Users/ben/Documents/code/ifttt-dead-wo-mans-switch/drain-stream.js",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/Transforms/StackPromotion.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/IPO/EagerSpecializer.cpp",
		"/Users/ben/Documents/code/swift-sources/bng-dev/debug/test-dev.sil",
		"/Users/ben/Documents/code/swift-sources/bng-dev/debug/test-out.sil",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/PassManager/PassPipeline.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/test/Constraints/bridging.swift",
		"/Users/ben/Documents/code/swift-sources/bng-dev/test.sh",
		"/Users/ben/Documents/code/swift-sources/swift/include/swift/SIL/SILFunction.h",
		"/Users/ben/Documents/code/swift-sources/swift/test/SILOptimizer/performance_inliner.sil",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/Transforms/PerformanceInliner.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SIL/SILFunction.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/test/attr/attr_semantics.swift",
		"/Users/ben/Documents/code/swift-sources/swift/docs/ABIStabilityManifesto.md",
		"/Users/ben/Documents/code/swift-sources/swift/include/swift/AST/DiagnosticsSema.def",
		"/Users/ben/Documents/code/swift-sources/swift/docs/TransparentAttr.rst",
		"/Users/ben/Documents/code/swift-sources/swift/validation-test/stdlib/Arrays.swift.gyb",
		"/Users/ben/Documents/code/swift-sources/swift/stdlib/public/core/Arrays.swift.gyb",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/LoopTransforms/COWArrayOpt.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/Analysis/ArraySemantic.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/AST/ASTContext.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/utils/pass-pipeline/scripts/pipeline_generator.py",
		"/Users/ben/Documents/code/swift-sources/swift/utils/pass-pipeline/README.rst",
		"/Users/ben/Documents/code/swift-sources/swift/utils/pass-pipeline/scripts/pipelines_build_script.py",
		"/Users/ben/Documents/code/swift-sources/swift/test/SILOptimizer/array_specialize.sil",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/PassManager/Passes.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/PassManager/PassManager.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/stdlib/public/core/Arrays.swift.gyb.orig",
		"/Users/ben/Documents/code/swift-sources/bng-dev/append.swift",
		"/Users/ben/Documents/code/swift-sources/bng-dev/concat.swift",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/Transforms/ArrayElementValuePropagation.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SIL/SILFunctionType.cpp",
		"/Users/ben/Documents/code/swift-sources/swift/include/swift/SILOptimizer/PassManager/PassPipeline.h",
		"/Users/ben/Documents/code/swift-sources/swift/include/swift/SILOptimizer/PassManager/Passes.h",
		"/Users/ben/Documents/code/swift-sources/swift/docs/OptimizerDesign.md",
		"/Users/ben/Documents/code/swift-sources/swift/docs/proposals/OptimizerEffects.rst",
		"/Users/ben/Documents/code/swift-sources/swift/docs/HighLevelSILOptimizations.rst",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/lib/SILOptimizer/Transforms/CMakeLists.txt",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/include/swift/SILOptimizer/PassManager/Passes.def",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/lib/SILOptimizer/PassManager/Passes.cpp",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/lib/SILOptimizer/PassManager/PassManager.cpp",
		"/Users/ben/Documents/code/swiftc-redundant-array-init/rundiff.sh",
		"/Users/ben/Documents/code/swiftc-redundant-array-init/concat.sil",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/lib/SILOptimizer/Transforms/RedundantArrayInitRemoval.cpp",
		"/Users/ben/Documents/code/swiftc-redundant-array-init/append.sil",
		"/Users/ben/Documents/code/swift-sources/bng-redundant-array-init/swift/lib/SILOptimizer/Transforms/ArrayElementValuePropagation.cpp",
		"/Users/ben/Documents/code/swiftc-redundant-array-init/test.sh",
		"/Users/ben/Documents/code/swift-sources/swift/lib/SILOptimizer/CMakeLists.txt",
		"/Users/ben/Documents/code/swift-sources/swift/include/swift/SILOptimizer/PassManager/Passes.def",
		"/Users/ben/Downloads/wp.xml",
		"/Users/ben/Downloads/code-coffee-and-net-present-value.ghost.2016-09-25.json",
		"/Users/ben/Documents/code/algebraic-linked-list-playground/README.md",
		"/Users/ben/Documents/code/swift-range-tree/README.md",
		"/Users/ben/Documents/code/swift-range-tree/RangeTree.podspec",
		"/Users/ben/Documents/code/pipeline-problem/package.json",
		"/Users/ben/Documents/code/pipeline-problem/index.js",
		"/Users/ben/Documents/code/pipeline-problem/test/pipeline.js",
		"/Users/ben/Documents/code/pipeline-problem/test/binomial.js",
		"/Users/ben/Documents/code/pipeline-problem/test.js"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/ben/Documents/code/swift-sources/swift"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"403",
			"log",
			"silent",
			"NOTIFICATION_INTERVAL",
			"lastWebhookNotification",
			"NOTIFICATION_INTERVAL",
			"stdout",
			"\\n",
			"notified",
			"process.stdout",
			"eventName",
			"events",
			"trigger",
			"data",
			"process.stdout.write(",
			"function",
			"catch",
			"addSSAPasses",
			"<S>",
			"<T>",
			"higherlevel",
			"specialize",
			"alloc_ref",
			"A3",
			"= alloc_ref",
			"llvm",
			"OptimizationLevelKind",
			"::HighLevel",
			"addSSAPasses",
			"addArrayElementPropagation",
			"ETA:",
			"objc_interop",
			"unsupported:",
			"unsupported",
			"osx",
			"addArrayElementPropagation",
			"array-element",
			"arrayelementpropagation",
			"arrayelement",
			"addArrayElement",
			"addssapasses",
			"inliner",
			"highlevel",
			"getperformancepass",
			"highlevell",
			"WhatToInline",
			"InlineSelection",
			"SILPerformanceInlinerPass",
			"createArrayElementPropagation",
			"OnlyInlineBeforeHighLevelOptsSemantics",
			"earlyinliner",
			"addEarlyInliner",
			"addSSAPasses",
			"addHighLevelEarlyLoopOptPipeline",
			"earlyinliner",
			"addEarlyInliner",
			"addSSAPasses",
			"Only",
			"hasSemanticsAttr",
			"array.",
			"@_semantics",
			"@semantics",
			"duplicatesemantics",
			"@_semantics",
			"\"array.",
			"inlineable",
			"@_inlineable",
			"__always",
			"Inline_t",
			"@_semant",
			"@semantics",
			"AlwaysInline",
			"NoInline",
			"Inline_t",
			"InlineStrategy",
			"noinline",
			"@inline",
			"WhatToInline",
			"InlineSelection",
			"inlineCallsIntoFunction",
			"getEligibleFunction",
			"addHighLevelEarlyLoopOptPipeline",
			"highlevel",
			"NoSemanticsAndGlobalInit",
			"HighLevel",
			"addHighLevelEarlyLoopOptPipeline",
			"addHighLevelLoopOptPasses",
			"pass pipeline",
			"addHighLevelLoopOptPasses",
			"addHighLevelEarlyLoopOptPipeline",
			"lateloopopt",
			"midlevel",
			"addSSAPasses",
			"SwiftArrayOpts",
			"array",
			"specialize",
			"addSwiftArrayOpts",
			"swiftarrayopts",
			"mayChangeArrayValueToNonUniqueState",
			"array.",
			"array.append_element",
			"array.",
			"Inline_t",
			"AlwaysInline",
			"Inline_t",
			"NoInline",
			"@noinline",
			"noinline",
			"getinlinestrategy",
			"addHighLevelLoopOptPasses",
			"silpasspipelineplan",
			"plan",
			"inliner",
			"addEarlyInliner",
			"addPerfInliner",
			"inliner",
			"NoGlobalInit",
			"NoSemanticsAndGlobalInit",
			"addSSAPasses",
			"inliner",
			"addHighLevelLoopOptPasses",
			"cow",
			"array",
			"semantics",
			"_semantics",
			"semantics",
			"semantic",
			"makeUniqueAndReserveCapacityIfNotUnique"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"lastNotification",
			"triggerName",
			"triggers",
			"log(",
			"SWIFT_BUILD_OUTPUT_ROOT",
			"RedundantArrayInitRemoval"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "swiftc-dev-env.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test",
				"test.js"
			],
			[
				"stackpro",
				"Swift/lib/SILOptimizer/Transforms/StackPromotion.cpp"
			],
			[
				"eagerspec",
				"Swift/lib/SILOptimizer/IPO/EagerSpecializer.cpp"
			],
			[
				"devirt_specialized_inherited_interplay.swift",
				"Swift/test/SILOptimizer/devirt_specialized_inherited_interplay.swift"
			],
			[
				"passpipe",
				"Swift/lib/SILOptimizer/PassManager/PassPipeline.cpp"
			],
			[
				"constraints/bridging",
				"Swift/test/Constraints/bridging.swift"
			],
			[
				"test.sh",
				"Redundant Array Init Removal/test.sh"
			],
			[
				"performance",
				"Swift/lib/SILOptimizer/Transforms/PerformanceInliner.cpp"
			],
			[
				"perform",
				"Swift/test/SILOptimizer/performance_inliner.sil"
			],
			[
				"silfunction.cp",
				"Swift/lib/SIL/SILFunction.cpp"
			],
			[
				"stdlibpubliccorearrays",
				"Swift/stdlib/public/core/Arrays.swift.gyb"
			],
			[
				"arrays.swift.gy",
				"Swift/validation-test/stdlib/Arrays.swift.gyb"
			],
			[
				"arrays.swift",
				"Swift/stdlib/public/core/Arrays.swift.gyb"
			],
			[
				"pipeline",
				"Swift/utils/pass-pipeline/README.rst"
			],
			[
				"arrayopt",
				"Swift/lib/SILOptimizer/LoopTransforms/COWArrayOpt.cpp"
			],
			[
				"arrayspecialize",
				"Swift/test/SILOptimizer/array_specialize.sil"
			],
			[
				"silpasspipeline.c",
				"Swift/lib/SILOptimizer/PassManager/PassPipeline.cpp"
			],
			[
				"passmana",
				"Swift/lib/SILOptimizer/PassManager/Passes.cpp"
			],
			[
				"passmanager",
				"Swift/lib/SILOptimizer/PassManager/PassManager.cpp"
			],
			[
				"passe",
				"Swift/lib/SILOptimizer/PassManager/Passes.cpp"
			],
			[
				"cowarra",
				"Swift/lib/SILOptimizer/LoopTransforms/COWArrayOpt.cpp"
			],
			[
				"astconte",
				"Swift/lib/AST/ASTContext.cpp"
			],
			[
				"passpipeline.h",
				"Swift/include/swift/SILOptimizer/PassManager/PassPipeline.h"
			],
			[
				"performan",
				"Swift/test/SILOptimizer/performance_inliner.sil"
			],
			[
				"passpipeline",
				"Swift/lib/SILOptimizer/PassManager/PassPipeline.cpp"
			],
			[
				"passes.cpp",
				"Swift/lib/SILOptimizer/PassManager/Passes.cpp"
			],
			[
				"pass",
				"Swift/include/swift/SILOptimizer/PassManager/Passes.h"
			],
			[
				"passes",
				"Swift/lib/SILOptimizer/PassManager/Passes.cpp"
			],
			[
				"high",
				"Swift/docs/HighLevelSILOptimizations.rst"
			],
			[
				"arrayelementva",
				"Swift/lib/SILOptimizer/Transforms/ArrayElementValuePropagation.cpp"
			],
			[
				"silfunctiontype",
				"Swift/lib/SIL/SILFunctionType.cpp"
			],
			[
				"arraysemant",
				"Swift/lib/SILOptimizer/Analysis/ArraySemantic.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 324.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
